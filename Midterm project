---
title: 'Midterm Report: Project Proposal'
author: "Xiayi Liao"
date: "10/11/2020"
output: html_document
---
<font size="5">Package: Quick graphing specifically used for BE data</font>  
<br/>
<font size="5">Primary Aim</font>  
<font size="3">The primary aim of my project is to create a function for my lab to plot graphs from BE quantification, a dataset coming from a specific experiment of different objectives with same set of parameters. Without creating this package, there are several steps to accomplish plotting a graph of BE data. First, import files into excel and screen out certain groups and subgroups one by one. Second, calculate the average of subgroups and manually make a new sheet to add these newly generated data. Third, Transfer processed data to software-GraphPad Prism to do variance analysis and plot a graph. Fourth, make adjustment of graph characteristics such as font style, color, and manually add asterisks that represent significance on the Graph. Each of the steps above takes long time to go and seems to be repetitive work when we need to plot graphs of BE data from different objectives. This project aims to produce a function of one-step analysis to quickly plot an ideal graph of BE raw data. To accomplish this goal, the package will include several processes.  
1. Creat new tables which include processed data, such as average intensity, intensity ratio from row1/2. This could be challenging, because the intensity data come from different rows, cells and objectives (where cells come from). Solution will be writing a loop function to screen out specific row or cell to calculate mean value.  
2. Do t test or ANOVA test to find out the intensity significance among different rows, cells and objectives  
3. Plot customized graph to present data which have been processed by above methods  
Overall, the package will produce a function to transform raw data of BE quantification to ideal graphs within one step</font>

<br/><br/>
<font size="5">Proof of Concept</font>

```{r setup, include=FALSE}
library(dplyr)
library(knitr)
library(kableExtra)
library(flextable)
library(ggplot2)
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
```
<font size="4">Read dataset of BE Quantification</font>
```{r}
BE <- read.csv("BE Quantification.csv", stringsAsFactors = F)
```

<font size="4">Representative format of raw data from BE Quantification file</font>
```{r echo=FALSE, out.width = '100%'}
knitr::include_graphics("Raw data.png")
```

<font size="4">Prework to remove NA data and creat new table with selective parameters for future use</font>
```{r}
## Remove individuals, type of which are missing, neither KO nor ctrl
BE1 <- BE %>% filter(Type == "KO" | Type == "ctrl")
## Choose parameters for future use
BE2 <-BE1[, c("Number", "Type", "Cell", "Row", "Label", "Mean.Grey")]
## Filter out objective KO with Number 1
BEko1 <- BE2 %>% filter(Number==1 , Type== "KO")
colmax <- apply(BEko1, 2, max)
colmax
## Count how many cells in objective KO-1
ccount <- max(BEko1$Cell)
ccount
## I tried to write a loop to automatically calculate the average ratio of row 1/2 of all cells on objective KO-1, but somehow failed. This is one of the challenge I encountered and also the goal that is going to be finished in final project
```

<font size="4"> Mean.Grey intensity in various cells within KO-1</font>
```{r}
## Mean.Grey intensity in various cells within KO-1
BEko1row1 <- BE2 %>% filter(Number==1 , Type== "KO", Row==1)
BEko1row1 <- BEko1row1[,c("Cell", "Label", "Mean.Grey")]
ggviolin(BEko1row1, x = "Cell", y = "Mean.Grey", fill="Cell", alpha=0.3, add = "boxplot",title="ratio")
```

<font size="4"> Intensity comparison of row 1 and row 2 in KO-1 </font>
```{r}
## Screen out data from KO-1, row2
BEko1row2 <- BE2 %>% filter(Number==1 , Type== "KO", Row==2)
BEko1row2 <- BEko1row2[,c("Cell", "Label", "Mean.Grey")]
## Calculate the mean and standard deviation value of intensity that come from KO-1 and row2
meanofBEko1 <- data.frame(mean(BEko1row1$Mean.Grey),mean(BEko1row2$Mean.Grey))
row1int <- c(1, mean(BEko1row1$Mean.Grey),sd(BEko1row1$Mean.Grey,na.rm=TRUE))
names(row1int) <- c("row", "mean", "sd")
row2int <- c(2, mean(BEko1row2$Mean.Grey),sd(BEko1row2$Mean.Grey,na.rm=TRUE))
names(row2int) <- c("row","mean", "sd")
## Create a data frame present both mean and standard deviation of row1 and row2
New <- rbind(row1int, row2int)
rownames(New)<- NULL
New <- as.data.frame(New)
New
## Plot a histogram with standard deviation
 ggplot(aes(x = row, y = mean), data = New) +
   geom_bar(stat = "identity") +
   geom_errorbar(aes(ymin = mean - sd, ymax = mean + sd)) +
   xlab("row") + ylab("Intensity")

```
  
<font size="4">Examples of creating a data frame showing average row1/2 ratio of cells</font>
```{r}
## Calculate the average ratio of row 1/2 on objective KO-1-cell1
BEko1cell1row1 <-BEko1 %>% filter(Cell==1, Row==1)
Avgko111 <- mean(BEko1cell1row1$Mean.Grey)
BEko1cell1row2 <-BEko1 %>% filter(Cell==1, Row==2)
Avgko112 <- mean(BEko1cell1row2$Mean.Grey)
Ratio_ko11 <- Avgko111/Avgko112
## list out data above in a data frame, rename columns
BEko1cell1 <- data.frame(1, Avgko111, Avgko112, Ratio_ko11)
colnames(BEko1cell1) <- c("cell", "row1_average", "row2_average", "row1to2_ratio")

## Calculate the average ratio of row 1/2 on objective KO-1-cell2
BEko1cell1row1 <-BEko1 %>% filter(Cell==2, Row==1)
Avgko121 <- mean(BEko1cell1row1$Mean.Grey)
BEko1cell1row2 <-BEko1 %>% filter(Cell==2, Row==2)
Avgko122 <- mean(BEko1cell1row2$Mean.Grey)
Ratio_ko12 <- Avgko121/Avgko122
## list out data above in a data frame, rename columns
BEko1cell2 <- data.frame(2, Avgko121, Avgko122, Ratio_ko12)
colnames(BEko1cell2) <- c("cell", "row1_average", "row2_average", "row1to2_ratio")

## Calculate the average ratio of row 1/2 on objective KO-1-cell3
BEko1cell1row1 <-BEko1 %>% filter(Cell==3, Row==1)
Avgko131 <- mean(BEko1cell1row1$Mean.Grey)
BEko1cell1row2 <-BEko1 %>% filter(Cell==3, Row==2)
Avgko132 <- mean(BEko1cell1row2$Mean.Grey)
Ratio_ko13 <- Avgko131/Avgko132
## list out data above in a data frame, rename columns
BEko1cell3 <- data.frame(3, Avgko131, Avgko132, Ratio_ko13)
colnames(BEko1cell3) <- c("cell", "row1_average", "row2_average", "row1to2_ratio")

## Combine average ratio of row 1/2 of all cells
AvgKO1 <- rbind(BEko1cell1, BEko1cell2, BEko1cell3)
AvgKO1
```
  

<font size="4">Examples of plotting graph of Average row1/2 ratio in KO1</font>
```{r}
## Plot a graph that represent average of row1/2 ratio
ggplot(aes(x = rownames(AvgKO1), y = row1to2_ratio), data = AvgKO1 ) +
  geom_point(size=5) + 
  geom_segment(aes(x = rownames(AvgKO1), xend = rownames(AvgKO1), y = 0, yend = row1to2_ratio)) + 
  theme(axis.text.x = element_text(angle = 45, vjust = 0.3, hjust = 0)) + 
  ggtitle("Intensity")+
  labs(subtitle="Average row1/2 ratio in KO1", caption="plotted by Xiayi Liao", x="KO1 cells",y="row1/2 ratio")
```
  
<font size="4">ANOVA test of data frame example above</font>
```{r}
aov(cell~row1to2_ratio, data=AvgKO1)
```

<font size="4">Representative final figure processed from BE Quantification file</font>
```{r echo=FALSE, out.width = '50%'}
knitr::include_graphics("ideal graph.png")
```
<br/> <br/>
<font size="5">Challenges</font>  
<font size="3">
1. I am now unable to produce a loop function to filter cells from certain objective or rows from certain cell.  
  Solution: Do more exercises on writing functions on Datacamp to get better understanding of how it works.  
2. Unable to generate a graph marked with significance asterisks.  
  Solution: Find a good function that covers the problem or learn how to add asterisks using ggplot function.  
3. Develop customized graphing functions.  
  Solution: Apply new plot style, graph size, font style or colour setting of my own choice.  
4. Check if parameters meet with requirements, for example, "Area" should be 0.095, "Channel" should be same in all rows.  
  Solution: Write a function to check if data meet with requirement, otherwise report error
</font>
<br/><br/>

<font size="5">To-do List</font>  
<font size="3">
1. Write a loop function to do certain filtration and calculation.(10/25)  
2. Create new tables for processed data. (10/25)  
3. Plot graphs presenting data from new tables with significance marked. (10/25)  
4. Customize graph characteristics. (10/31)  
5. Write a function to report error when data don't meet with requirements. (11/8)  
6. Form into a package and test with other BE quantification data. (11/10)  
7. Fix underlying errors.(11/18)  
8. Submit package files. (11/20)  

<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>
<br/>

